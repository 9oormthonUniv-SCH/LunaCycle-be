name: Deploy Pre-9roomthon (EC2 builds Docker)

on:
  push:
    branches:
      - main

concurrency:
  group: deploy-pre-9roomthon-develop
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 프로젝트 전체를 EC2로 복사 (불필요/민감 파일 제외)
      - name: Copy project to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          rm: true
          source: "."
          target: "/home/${{ secrets.EC2_USER }}/pre-9roomthon"

      # EC2에서 .env 생성 -> 도커 컴포즈로 빌드/배포
      - name: SSH to EC2 and build+run on host
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            set -e
            cd /home/${{ secrets.EC2_USER }}/pre-9roomthon

            # .env 생성 (GitHub Secret에 멀티라인으로 저장한 ENV_FILE_CONTENT 사용)
            cat > .env << 'EOF'
            ${{ secrets.ENV_FILE_CONTENT }}
            EOF

            # docker compose 혹은 docker-compose 사용 가능한지 확인
            if docker compose version >/dev/null 2>&1; then
              COMPOSE="docker compose"
            else
              COMPOSE="docker-compose"
            fi

            # 이전 컨테이너/네트워크 종료
            $COMPOSE down || true

            # (권장) H2 파일락 회피 위해 .dockerignore에 data/ 포함 + compose에서는 named volume 사용
            # 빌드 & 배포
            $COMPOSE --env-file .env up -d --build

            # 청소
            docker system prune -f || true
