name: Deploy Pre-9roomthon (EC2 builds Docker)

on:
  push:
    branches:
      - main

concurrency:
  group: deploy-pre-9roomthon-main
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 프로젝트 전체를 EC2로 복사 (불필요/민감 파일 제외)
      - name: Copy project to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          # 데이터/로그 보존 위해 rm 비활성화 (필요시 true로)
          rm: false
          source: "."
          target: "/home/${{ secrets.EC2_USER }}/pre-9roomthon"
          exclude: |
            .git
            .github
            .gitignore
            .dockerignore
            .env
            data
            build
            .gradle
            logs
            node_modules
            **/.idea
            **/.vscode
            **/*.iml
            src/main/resources/application.properties
            src/main/resources/application-secret.properties

      # EC2에서 .env 생성 → Docker Compose 빌드/배포
      - name: SSH to EC2 and build+run
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            set -euo pipefail
            cd /home/${{ secrets.EC2_USER }}/pre-9roomthon

            # 1) .env 생성 (GitHub Secret: ENV_FILE_CONTENT)
            cat > .env << 'EOF'
            ${{ secrets.ENV_FILE_CONTENT }}
            EOF

            # 2) 기존 컨테이너 종료 (orphan 정리)
            docker compose down --remove-orphans || true

            # 3) 빌드 & 배포 (항상 최신 이미지 pull)
            docker compose --env-file .env up -d --build --pull always --remove-orphans

            # 4) 상태/로그 확인
            docker compose ps
            docker compose logs --no-color --tail=200 || true

            # 5) 이미지 캐시 청소(선택)
            docker image prune -f || true

